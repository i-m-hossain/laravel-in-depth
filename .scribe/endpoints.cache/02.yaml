## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  Api's to manage the user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Api's to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. defaults to 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      page:
        name: page
        description: 'page to view. defaults to 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanQueryParameters:
      page_size: 10
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"name":"Mariam Schmeler","email":"schamberger.christiana@example.org","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"},{"id":12,"name":"Coleman Cartwright","email":"weimann.bethel@example.com","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Api's to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'User Email.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: password.
        required: true
        example: '?iG"3C5WnUQ}q!.'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@example.com
      password: '?iG"3C5WnUQ}q!.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"name":"Roosevelt Leffler","email":"kallie00@example.com","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"},{"id":12,"name":"Myrtie Kirlin","email":"salvatore69@example.com","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Api's to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User Id.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"name":"Jarrett Cummerata","email":"lesly.bailey@example.net","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"},{"id":12,"name":"Dana Johns II","email":"xzavier.wisozk@example.org","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Api's to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'User Email.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: password.
        required: true
        example: ';(@5a5sw!z#0m4[u\_s'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@example.com
      password: ';(@5a5sw!z#0m4[u\_s'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"name":"Pauline Abernathy","email":"brekke.grady@example.com","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"},{"id":12,"name":"Mariah Stoltenberg","email":"nikolaus.bonita@example.com","emailVerifiedAt":"2023-09-26T09:25:34.000000Z","createdAt":"2023-09-26T09:25:34.000000Z","updatedAt":"2023-09-26T09:25:34.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: |-

        Api's to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": "success"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
